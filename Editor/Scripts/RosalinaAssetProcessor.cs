#if UNITY_EDITOR
using System;
using System.IO;
using System.Linq;
using UnityEditor;
using UnityEngine;

public class RosalinaAssetProcessor : AssetPostprocessor
{
    private static readonly string UIDocumentExtension = ".uxml";

    private static void OnPostprocessAllAssets(string[] importedAssets, string[] deletedAssets, string[] movedAssets, string[] movedFromPath)
    {
        string[] uiFilesChanged = importedAssets
            .Where(x => x.StartsWith("Assets"))
            .Where(x => Path.GetExtension(x) == UIDocumentExtension)
            .ToArray();

        if (uiFilesChanged.Length > 0)
        {
            for (int i = 0; i < uiFilesChanged.Length; i++)
            {
                string uiDocumentPath = uiFilesChanged[i];
                var document = new UIDocumentAsset(uiDocumentPath);

                try
                {
                    RosalinaEditorUtilities.ShowProgressBar("Rosalina", $"Generating {document.Name} bindings...", i, uiFilesChanged.Length);
                    
                    string generatedBindingsScriptPath = RosalinaGenerator.BuildAutoGeneratedFilePath(document);

                    RosalinaGenerator.GenerateBindings(document, generatedBindingsScriptPath);
                }
                catch (Exception ex)
                {
                    Debug.LogException(ex);
                }
            }

            Debug.Log($"[Rosalina]: Done.");
            EditorUtility.ClearProgressBar();
            AssetDatabase.Refresh();
        }
    }
}
#endif